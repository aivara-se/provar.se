# apps/webapi - quality checks

name: apps/webapi - quality checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - ".github/**"
      - "apps/webapi/**"

concurrency:
  group: "app.webapi.quality-checks-${{ github.head_ref }}"
  cancel-in-progress: true

jobs:
  quality-checks:
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    defaults:
      run:
        working-directory: ./apps/webapi

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.1"
          cache-dependency-path: apps/webapi/go.sum

      - name: Install dependencies
        run: go mod download

      - name: Build the service
        run: go build -o ./webapi

      - name: Check code formatting
        run: test -z "$(gofmt -l .)"

      - name: Check code errors
        run: go vet ./...

      - name: Start dependencies
        run: docker-compose -f "../../compose.yaml" up -d

      - name: Download GeoLite2 DB
        run: |
          wget "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${{ secrets.APPS_WEBAPI_METAMIND_KEY }}&suffix=tar.gz" -O GeoLite2-City.tar.gz
          tar -xzf GeoLite2-City.tar.gz
          mv `find . | grep GeoLite2-City.mmdb` ./

      - name: Database migrations
        env:
          DATABASE_URI: postgresql://postgres:postgres@localhost/provar-test?sslmode=disable
        run: |
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
          migrate -database $DATABASE_URI -path ../../infra/migrations/db/migrations up

      - name: Check unit tests
        env:
          AUTH_SECRET: lsYOrIgN9GmEa+4ycD8q/Z5ZD/KiN89I/LhFNzqZsE3A0Pek5bLKmg==
          DATABASE_URI: postgresql://postgres:postgres@localhost/provar-test?sslmode=disable
          EMAIL_FROM: noreply@provar.se
          EMAIL_SERVER: smtp://user:pass@localhost:1025
          GEOLITE2_DB: ../../GeoLite2-City.mmdb
          PROVAR_API_URL: http://localhost:3001
          PROVAR_APP_URL: http://localhost:3002
        run: go test ./... -v

      - name: Stop dependencies
        if: always()
        run: docker-compose -f "../../compose.yaml" down
