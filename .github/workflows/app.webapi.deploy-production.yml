# apps/webapi - deploy production

name: apps/webapi - deploy production

on:
  push:
    branches: ["main"]
    paths:
      - ".github/apps.webapi.*.yml"
      - "apps/webapi/**"
  workflow_dispatch:

concurrency:
  group: "app.webapi.deploy-production"
  cancel-in-progress: false

jobs:
  deploy-production:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      deployments: write

    defaults:
      run:
        working-directory: ./apps/webapi

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          service_account: "${{ secrets.APPS_WEBAPI_GCP_SERVICE_ACCOUNT }}"
          credentials_json: "${{ secrets.APPS_WEBAPI_GCP_CREDENTIALS }}"

      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v3"
        with:
          username: "_json_key"
          password: "${{ secrets.APPS_WEBAPI_GCP_CREDENTIALS }}"
          registry: "${{ secrets.APPS_WEBAPI_GCP_GAR_REGISTRY }}"

      - name: Download GeoLite2 DB
        run: |
          wget "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=${{ secrets.APPS_WEBAPI_METAMIND_KEY }}&suffix=tar.gz" -O GeoLite2-City.tar.gz
          tar -xzf GeoLite2-City.tar.gz
          mv `find . | grep GeoLite2-City.mmdb` ./

      - name: Build docker image
        run: docker build -t "${{ secrets.APPS_WEBAPI_GCP_GAR_REPOSITORY }}/webapi:${{ github.sha }}" .

      - name: Push docker image
        run: docker push "${{ secrets.APPS_WEBAPI_GCP_GAR_REPOSITORY }}/webapi:${{ github.sha }}"

      - name: Database migrations
        env:
          DATABASE_URI: ${{ secrets.APPS_WEBAPI_APP_DATABASE_URI }}
        working-directory: ./infra/migration
        run: |
          go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
          migrate -database $DATABASE_URI -path db/migrations up

      - name: Deploy the service
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: "${{ secrets.APPS_WEBAPI_GCP_CLOUD_RUN_SERVICE }}"
          region: "${{ secrets.APPS_WEBAPI_GCP_REGION }}"
          image: "${{ secrets.APPS_WEBAPI_GCP_GAR_REPOSITORY }}/webapi:${{ github.sha }}"
          env_vars: |
            AUTH_GITHUB_ID=${{ secrets.APPS_WEBAPI_APP_AUTH_GITHUB_ID }}
            AUTH_GITHUB_SECRET=${{ secrets.APPS_WEBAPI_APP_AUTH_GITHUB_SECRET }}
            AUTH_GOOGLE_ID=${{ secrets.APPS_WEBAPI_APP_AUTH_GOOGLE_ID }}
            AUTH_GOOGLE_SECRET=${{ secrets.APPS_WEBAPI_APP_AUTH_GOOGLE_SECRET }}
            AUTH_SECRET=${{ secrets.APPS_WEBAPI_APP_AUTH_SECRET }}
            DATABASE_URI=${{ secrets.APPS_WEBAPI_APP_DATABASE_URI }}
            EMAIL_FROM=${{ secrets.APPS_WEBAPI_APP_EMAIL_FROM }}
            EMAIL_SERVER=${{ secrets.APPS_WEBAPI_APP_EMAIL_SERVER }}
            GEOLITE2_DB=${{ secrets.APPS_WEBAPI_APP_GEOLITE2_DB }}
            PROVAR_API_URL=${{ secrets.APPS_WEBAPI_APP_PROVAR_API_URL }}
            PROVAR_APP_URL=${{ secrets.APPS_WEBAPI_APP_PROVAR_APP_URL }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
