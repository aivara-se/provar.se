/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/auth/email/confirm': {
		post: operations['EmailAuthentication_confirm'];
	};
	'/auth/email/prepare': {
		post: operations['EmailAuthentication_prepare'];
	};
	'/auth/whoami': {
		get: operations['Authentication_whoami'];
	};
	'/organization': {
		post: operations['Organization_create'];
	};
	'/organization/{organizationId}': {
		get: operations['Organization_details'];
		delete: operations['Organization_delete'];
		patch: operations['Organization_update'];
	};
	'/organization/{organizationId}/credential': {
		post: operations['Credential_create'];
	};
	'/organization/{organizationId}/credential/{credentialId}': {
		delete: operations['Credential_delete'];
	};
	'/organization/{organizationId}/credentials': {
		get: operations['Credential_list'];
	};
	'/organization/{organizationId}/feedback': {
		post: operations['Feedback_create'];
	};
	'/organization/{organizationId}/feedback/{feedbackId}': {
		get: operations['Feedback_details'];
		delete: operations['Feedback_delete'];
	};
	'/organization/{organizationId}/feedbacks': {
		post: operations['Feedback_search'];
	};
	'/organization/{organizationId}/invitation': {
		post: operations['Invitation_create'];
	};
	'/organization/{organizationId}/invitation/{invitationId}': {
		get: operations['Invitation_details'];
		delete: operations['Invitation_delete'];
	};
	'/organization/{organizationId}/invitation/{invitationId}/accept': {
		post: operations['Invitation_accept'];
	};
	'/organization/{organizationId}/invitations': {
		get: operations['Invitation_list'];
	};
	'/organization/{organizationId}/member/{userId}': {
		delete: operations['Organization_removeMember'];
	};
	'/organization/{organizationId}/members': {
		get: operations['Organization_members'];
	};
	'/organization/{organizationId}/public': {
		get: operations['Organization_public'];
	};
	'/organization/{organizationId}/settings': {
		get: operations['Organization_settings'];
	};
	'/organizations': {
		get: operations['Organization_list'];
	};
	'/ping': {
		get: operations['HealthCheck_basic'];
	};
	'/ping/secure': {
		get: operations['HealthCheck_secure'];
	};
}

export type webhooks = Record<string, never>;

export interface components {
	schemas: {
		CredentialDetails: {
			id: string;
			createdAt: string;
			createdBy: string;
			modifiedAt: string;
			lastUsedAt: string;
			organizationId: string;
			name: string;
			secret: string;
		};
		FeedbackCreate: {
			feedbackType: components['schemas']['FeedbackType'];
			feedbackTime: string;
			feedbackData: {
				[key: string]: string;
			};
			feedbackTags?: {
				[key: string]: string;
			};
			feedbackMeta?: {
				[key: string]: string;
			};
			feedbackUser?: {
				[key: string]: string;
			};
		};
		FeedbackDetails: {
			id: string;
			organizationId: string;
			createdAt: string;
			feedbackTime: string;
			feedbackType: components['schemas']['FeedbackType'];
			feedbackData: {
				[key: string]: string;
			};
			feedbackTags: {
				[key: string]: string;
			};
			feedbackMeta: {
				[key: string]: string;
			};
			feedbackUser: {
				[key: string]: string;
			};
		};
		FeedbackSearch: {
			/** Format: double */
			pageLimit?: number;
			/** Format: double */
			pageOffset?: number;
			begTimestamp?: string;
			endTimestamp?: string;
			feedbackType?: components['schemas']['FeedbackType'][];
			feedbackTags?: {
				[key: string]: string;
			};
			feedbackMeta?: {
				[key: string]: string;
			};
			feedbackUser?: {
				[key: string]: string;
			};
		};
		/** @enum {string} */
		FeedbackType: 'text' | 'cnps' | 'csat';
		InvitationDetails: {
			id: string;
			organizationId: string;
			createdAt: string;
			createdBy: string;
			expiresAt: string;
			acceptedAt?: string;
			secret: string;
			name: string;
			email: string;
			avatar: string;
		};
		OrganizationDetails: {
			id: string;
			createdAt: string;
			createdBy: string;
			modifiedAt: string;
			name: string;
			slug: string;
			description: string;
		};
		PrincipalDetails: {
			/** @enum {string} */
			type: 'user' | 'credential';
			user?: components['schemas']['UserDetails'];
			credential?: components['schemas']['CredentialDetails'];
		};
		PublicOrganizationDetails: {
			id: string;
			name: string;
		};
		UserDetails: {
			id: string;
			createdAt: string;
			modifiedAt: string;
			avatar: string;
			email: string;
			emailVerifiedAt?: string;
			name: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
	EmailAuthentication_confirm: {
		requestBody: {
			content: {
				'application/json': {
					token: string;
				};
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': {
						accessToken: string;
					};
				};
			};
		};
	};
	EmailAuthentication_prepare: {
		requestBody: {
			content: {
				'application/json': {
					email: string;
				};
			};
		};
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	Authentication_whoami: {
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['PrincipalDetails'];
				};
			};
		};
	};
	Organization_create: {
		requestBody: {
			content: {
				'application/json': {
					name: string;
					slug: string;
					description: string;
				};
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['OrganizationDetails'];
				};
			};
		};
	};
	Organization_details: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['OrganizationDetails'];
				};
			};
		};
	};
	Organization_delete: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	Organization_update: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		requestBody: {
			content: {
				'application/json': {
					name?: string;
					slug?: string;
					description?: string;
				};
			};
		};
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	Credential_create: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		requestBody: {
			content: {
				'application/json': {
					name: string;
				};
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['CredentialDetails'];
				};
			};
		};
	};
	Credential_delete: {
		parameters: {
			path: {
				organizationId: string;
				credentialId: string;
			};
		};
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	Credential_list: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['CredentialDetails'][];
				};
			};
		};
	};
	Feedback_create: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['FeedbackCreate'];
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['FeedbackDetails'];
				};
			};
		};
	};
	Feedback_details: {
		parameters: {
			path: {
				organizationId: string;
				feedbackId: string;
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['FeedbackDetails'];
				};
			};
		};
	};
	Feedback_delete: {
		parameters: {
			path: {
				organizationId: string;
				feedbackId: string;
			};
		};
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	Feedback_search: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		requestBody: {
			content: {
				'application/json': components['schemas']['FeedbackSearch'];
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': {
						/** Format: double */
						total: number;
						feedbacks: components['schemas']['FeedbackDetails'][];
					};
				};
			};
		};
	};
	Invitation_create: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		requestBody: {
			content: {
				'application/json': {
					name: string;
					email: string;
				};
			};
		};
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	Invitation_details: {
		parameters: {
			path: {
				organizationId: string;
				invitationId: string;
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['InvitationDetails'];
				};
			};
		};
	};
	Invitation_delete: {
		parameters: {
			path: {
				organizationId: string;
				invitationId: string;
			};
		};
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	Invitation_accept: {
		parameters: {
			path: {
				organizationId: string;
				invitationId: string;
			};
		};
		requestBody: {
			content: {
				'application/json': {
					secret: string;
				};
			};
		};
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	Invitation_list: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['InvitationDetails'][];
				};
			};
		};
	};
	Organization_removeMember: {
		parameters: {
			path: {
				organizationId: string;
				userId: string;
			};
		};
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	Organization_members: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['UserDetails'][];
				};
			};
		};
	};
	Organization_public: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['PublicOrganizationDetails'];
				};
			};
		};
	};
	Organization_settings: {
		parameters: {
			path: {
				organizationId: string;
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': {
						[key: string]: string;
					};
				};
			};
		};
	};
	Organization_list: {
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['OrganizationDetails'][];
				};
			};
		};
	};
	HealthCheck_basic: {
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	HealthCheck_secure: {
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
}
