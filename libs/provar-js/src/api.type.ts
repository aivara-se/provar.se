/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/auth/email/confirm': {
		post: operations['EmailAuthentication_confirm'];
	};
	'/auth/email/prepare': {
		post: operations['EmailAuthentication_prepare'];
	};
	'/auth/whoami': {
		get: operations['Authentication_whoami'];
	};
	'/organization': {
		post: operations['Organization_create'];
	};
	'/organization/list': {
		get: operations['Organization_list'];
	};
	'/ping': {
		get: operations['HealthCheck_basic'];
	};
	'/ping/secure': {
		get: operations['HealthCheck_secure'];
	};
}

export type webhooks = Record<string, never>;

export interface components {
	schemas: {
		Credential: {
			id: string;
			organizationId: string;
			name: string;
		};
		OrganizationDetails: {
			id: string;
			name: string;
			slug: string;
			/** Format: double */
			createdAt: number;
			createdBy: string;
			/** Format: double */
			modifiedAt: number;
		};
		User: {
			id: string;
			email: string;
			name: string;
		};
	};
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
	EmailAuthentication_confirm: {
		requestBody: {
			content: {
				'application/json': {
					token: string;
				};
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': {
						accessToken: string;
					};
				};
			};
		};
	};
	EmailAuthentication_prepare: {
		requestBody: {
			content: {
				'application/json': {
					email: string;
				};
			};
		};
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	Authentication_whoami: {
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': {
						/** @enum {string} */
						type: 'user' | 'credential';
						user?: components['schemas']['User'];
						credential?: components['schemas']['Credential'];
					};
				};
			};
		};
	};
	Organization_create: {
		requestBody: {
			content: {
				'application/json': {
					name: string;
					slug: string;
				};
			};
		};
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['OrganizationDetails'];
				};
			};
		};
	};
	Organization_list: {
		responses: {
			/** @description The request has succeeded. */
			200: {
				content: {
					'application/json': components['schemas']['OrganizationDetails'][];
				};
			};
		};
	};
	HealthCheck_basic: {
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
	HealthCheck_secure: {
		responses: {
			/** @description There is no content to send for this request, but the headers may be useful. */
			204: {
				content: never;
			};
		};
	};
}
