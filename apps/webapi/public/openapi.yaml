openapi: 3.0.0
info:
  title: (title)
  version: 0.0.0
tags: []
paths:
  /auth/email/confirm:
    post:
      operationId: EmailAuthentication_confirm
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                required:
                  - accessToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
  /auth/email/prepare:
    post:
      operationId: EmailAuthentication_prepare
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
  /auth/whoami:
    get:
      operationId: Authentication_whoami
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrincipalDetails'
      security:
        - BearerAuth: []
  /organization:
    post:
      operationId: Organization_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                slug:
                  type: string
                description:
                  type: string
              required:
                - name
                - slug
                - description
      security:
        - BearerAuth: []
  /organization/{organizationId}:
    get:
      operationId: Organization_details
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationDetails'
      security:
        - BearerAuth: []
    patch:
      operationId: Organization_update
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                slug:
                  type: string
                description:
                  type: string
      security:
        - BearerAuth: []
    delete:
      operationId: Organization_delete
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      security:
        - BearerAuth: []
  /organization/{organizationId}/credential:
    post:
      operationId: Credential_create
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialDetails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      security:
        - BearerAuth: []
  /organization/{organizationId}/credential/{credentialId}:
    delete:
      operationId: Credential_delete
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: credentialId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      security:
        - BearerAuth: []
  /organization/{organizationId}/credentials:
    get:
      operationId: Credential_list
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CredentialDetails'
      security:
        - BearerAuth: []
  /organization/{organizationId}/feedback:
    post:
      operationId: Feedback_create
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackDetails'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreate'
      security:
        - BearerAuth: []
  /organization/{organizationId}/feedback/{feedbackId}:
    get:
      operationId: Feedback_details
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: feedbackId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackDetails'
      security:
        - BearerAuth: []
    delete:
      operationId: Feedback_delete
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: feedbackId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      security:
        - BearerAuth: []
  /organization/{organizationId}/feedbacks:
    post:
      operationId: Feedback_search
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  feedbacks:
                    type: array
                    items:
                      $ref: '#/components/schemas/FeedbackDetails'
                required:
                  - feedbacks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackSearch'
      security:
        - BearerAuth: []
  /organization/{organizationId}/feedbacks/count:
    post:
      operationId: Feedback_count
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: number
                    format: double
                required:
                  - total
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackSearch'
      security:
        - BearerAuth: []
  /organization/{organizationId}/invitation:
    post:
      operationId: Invitation_create
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
              required:
                - name
                - email
      security:
        - BearerAuth: []
  /organization/{organizationId}/invitation/{invitationId}:
    get:
      operationId: Invitation_details
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationDetails'
      security:
        - BearerAuth: []
    delete:
      operationId: Invitation_delete
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      security:
        - BearerAuth: []
  /organization/{organizationId}/invitation/{invitationId}/accept:
    post:
      operationId: Invitation_accept
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: invitationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                secret:
                  type: string
              required:
                - secret
      security:
        - BearerAuth: []
  /organization/{organizationId}/invitations:
    get:
      operationId: Invitation_list
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvitationDetails'
      security:
        - BearerAuth: []
  /organization/{organizationId}/member/{userId}:
    delete:
      operationId: Organization_removeMember
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      security:
        - BearerAuth: []
  /organization/{organizationId}/members:
    get:
      operationId: Organization_members
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserDetails'
      security:
        - BearerAuth: []
  /organization/{organizationId}/public:
    get:
      operationId: Organization_public
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicOrganizationDetails'
      security:
        - BearerAuth: []
  /organization/{organizationId}/settings:
    get:
      operationId: Organization_settings
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
      security:
        - BearerAuth: []
  /organizations:
    get:
      operationId: Organization_list
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDetails'
      security:
        - BearerAuth: []
  /ping:
    get:
      operationId: HealthCheck_basic
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
  /ping/secure:
    get:
      operationId: HealthCheck_secure
      parameters: []
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
      security:
        - BearerAuth: []
components:
  schemas:
    CredentialDetails:
      type: object
      required:
        - id
        - createdAt
        - createdBy
        - modifiedAt
        - lastUsedAt
        - organizationId
        - name
        - secret
      properties:
        id:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        modifiedAt:
          type: string
        lastUsedAt:
          type: string
        organizationId:
          type: string
        name:
          type: string
        secret:
          type: string
    FeedbackCreate:
      type: object
      required:
        - feedbackType
        - feedbackTime
        - feedbackData
      properties:
        feedbackType:
          $ref: '#/components/schemas/FeedbackType'
        feedbackTime:
          type: string
        feedbackData:
          type: object
          additionalProperties:
            type: string
        feedbackTags:
          type: object
          additionalProperties:
            type: string
        feedbackMeta:
          type: object
          additionalProperties:
            type: string
        feedbackUser:
          type: object
          additionalProperties:
            type: string
    FeedbackDetails:
      type: object
      required:
        - id
        - organizationId
        - createdAt
        - feedbackTime
        - feedbackType
        - feedbackData
        - feedbackTags
        - feedbackMeta
        - feedbackUser
      properties:
        id:
          type: string
        organizationId:
          type: string
        createdAt:
          type: string
        feedbackTime:
          type: string
        feedbackType:
          $ref: '#/components/schemas/FeedbackType'
        feedbackData:
          type: object
          additionalProperties:
            type: string
        feedbackTags:
          type: object
          additionalProperties:
            type: string
        feedbackMeta:
          type: object
          additionalProperties:
            type: string
        feedbackUser:
          type: object
          additionalProperties:
            type: string
    FeedbackSearch:
      type: object
      properties:
        pageLimit:
          type: number
          format: double
        pageOffset:
          type: number
          format: double
        begTimestamp:
          type: string
        endTimestamp:
          type: string
        feedbackType:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackType'
        feedbackTags:
          type: object
          additionalProperties:
            type: string
        feedbackMeta:
          type: object
          additionalProperties:
            type: string
        feedbackUser:
          type: object
          additionalProperties:
            type: string
    FeedbackType:
      type: string
      enum:
        - text
        - cnps
        - csat
    InvitationDetails:
      type: object
      required:
        - id
        - organizationId
        - createdAt
        - createdBy
        - expiresAt
        - secret
        - name
        - email
        - avatar
      properties:
        id:
          type: string
        organizationId:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        expiresAt:
          type: string
        acceptedAt:
          type: string
        secret:
          type: string
        name:
          type: string
        email:
          type: string
        avatar:
          type: string
    OrganizationDetails:
      type: object
      required:
        - id
        - createdAt
        - createdBy
        - modifiedAt
        - name
        - slug
        - description
      properties:
        id:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        modifiedAt:
          type: string
        name:
          type: string
        slug:
          type: string
        description:
          type: string
    PrincipalDetails:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - user
            - credential
        user:
          $ref: '#/components/schemas/UserDetails'
        credential:
          $ref: '#/components/schemas/CredentialDetails'
    PublicOrganizationDetails:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
    UserDetails:
      type: object
      required:
        - id
        - createdAt
        - modifiedAt
        - avatar
        - email
        - name
      properties:
        id:
          type: string
        createdAt:
          type: string
        modifiedAt:
          type: string
        avatar:
          type: string
        email:
          type: string
        emailVerifiedAt:
          type: string
        name:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
