definitions:
  feedback.CreateFeedbackRequestBody:
    properties:
      data:
        $ref: '#/definitions/feedback.FeedbackData'
      meta:
        $ref: '#/definitions/feedback.FeedbackMeta'
      projectId:
        type: string
      tags:
        $ref: '#/definitions/feedback.FeedbackTags'
      type:
        allOf:
        - $ref: '#/definitions/feedback.FeedbackType'
        enum:
        - text
        - cnps
        - csat
      user:
        $ref: '#/definitions/feedback.FeedbackUser'
    required:
    - data
    - type
    type: object
  feedback.FeedbackData:
    properties:
      cnps:
        maximum: 1
        minimum: 0
        type: number
      csat:
        maximum: 1
        minimum: 0
        type: number
      text:
        type: string
    type: object
  feedback.FeedbackMeta:
    additionalProperties: true
    type: object
  feedback.FeedbackTags:
    additionalProperties:
      type: string
    type: object
  feedback.FeedbackType:
    enum:
    - text
    - cnps
    - csat
    type: string
    x-enum-varnames:
    - FeedbackTypeText
    - FeedbackTypeCNPS
    - FeedbackTypeCSAT
  feedback.FeedbackUser:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  feedback.ImportFeedbackRequestBody:
    properties:
      link:
        type: string
      projectId:
        type: string
    required:
    - link
    type: object
info:
  contact: {}
paths:
  /feedback:
    post:
      consumes:
      - application/json
      description: Create a new feedback event for an organization.
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/feedback.CreateFeedbackRequestBody'
      responses:
        "204":
          description: ok
      summary: Create a new feedback event for an organization.
      tags:
      - feedback
  /feedback/import:
    post:
      consumes:
      - application/json
      description: Imports feedback from an uploaded CSV file.
      parameters:
      - description: Request body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/feedback.ImportFeedbackRequestBody'
      responses:
        "204":
          description: ok
      summary: Imports feedback from an uploaded CSV file.
      tags:
      - feedback
  /ping:
    get:
      description: Ensure that the service can be reached.
      responses:
        "204":
          description: ok
      summary: Ensure that the service can be reached.
      tags:
      - health
  /ping/secure:
    get:
      description: Ensure that the api key is valid
      responses:
        "204":
          description: ok
      summary: Ensure that the api key is valid
      tags:
      - health
swagger: "2.0"
